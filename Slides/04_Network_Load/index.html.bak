<!doctype html>
<html>
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

		<title>Lab 4: Network, Load, and Advanced Aggregations</title>

		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/reveal.js@4.1.0/dist/reset.css">
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/reveal.js@4.1.0/dist/reveal.css">
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/reveal.js@4.1.0/dist/theme/night.css">

		<!-- Theme used for syntax highlighted code -->
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/reveal.js@4.1.0/plugin/highlight/monokai.css">
        <style>
            .reveal pre {
                margin: 0;
                box-shadow: none;
            }
            .reveal pre code {
                padding: 20px;
                max-height: 400px;
                line-height: 1.2;
            }
            .two-column {
                display: flex;
                justify-content: space-between;
            }
            .two-column .left {
                width: 48%;
            }
            .two-column .right {
                width: 48%;
            }
            .reveal .smaller-text {
                font-size: 0.8em;
            }
            .reveal .smallest-text {
                font-size: 0.6em;
            }
        </style>
	</head>
	<body>
		<div class="reveal">
			<div class="slides">
                <section>
                    <h1>Lab 4: Network, Load, and Advanced Aggregations</h1>
                    <p>üåê Intermediate PromQL</p>
                    <p><small>Navigate: <a href="../index.html">All Slides</a></small></p>
                </section>

                <section>
                    <h2>Objectives</h2>
                    <ul>
                        <li>Query network traffic and system load metrics</li>
                        <li>Use advanced PromQL aggregations</li>
                        <li>Build multi-metric dashboards</li>
                    </ul>
                </section>

                <section>
                    <h2>Network Traffic: The Basics</h2>
                    <ul>
                        <li>Network metrics track bytes sent and received</li>
                        <li>Available for each network interface</li>
                        <li>Stored as ever-increasing counters</li>
                        <li>Use <code>rate()</code> to convert to bytes/second</li>
                    </ul>
                </section>

                <section>
                    <h2>Network Receive Rate</h2>
                    <pre><code class="language-promql">rate(node_network_receive_bytes_total{instance="localhost:9100",device!="lo"}[5m])</code></pre>
                    <p>Measures bytes per second flowing <em>into</em> your network interfaces</p>
                    <ul>
                        <li><code>device!="lo"</code> excludes the loopback interface</li>
                        <li>Focus on real network traffic, not internal communication</li>
                    </ul>
                </section>

                <section>
                    <h2>Network Transmit Rate</h2>
                    <pre><code class="language-promql">rate(node_network_transmit_bytes_total{instance="localhost:9100",device!="lo"}[5m])</code></pre>
                    <p>Measures bytes per second flowing <em>out of</em> your network interfaces</p>
                    <ul>
                        <li>Same filtering as receive metrics</li>
                        <li>Together with receive rate, provides complete traffic picture</li>
                    </ul>
                </section>

                <section>
                    <h2>System Load Averages</h2>
                    <p>Load averages represent processes waiting for or using CPU resources</p>
                    <ul>
                        <li>Higher values indicate higher contention</li>
                        <li>Compare to CPU core count to gauge capacity</li>
                        <li>Three time windows provide trend information</li>
                    </ul>
                </section>

                <section>
                    <h2>1-Minute Load Average</h2>
                    <pre><code class="language-promql">node_load1{instance="localhost:9100"}</code></pre>
                    <p>Most responsive to recent changes</p>
                    <p>Good for detecting sudden spikes</p>
                </section>

                <section>
                    <h2>5 & 15-Minute Load Averages</h2>
                    <pre><code class="language-promql">node_load5{instance="localhost:9100"}</code></pre>
                    <pre><code class="language-promql">node_load15{instance="localhost:9100"}</code></pre>
                    <p>Smoother view over longer periods</p>
                    <p>Better for detecting sustained load issues</p>
                </section>

                <section>
                    <h2>Load Average Interpretation</h2>
                    <div class="two-column">
                        <div class="left">
                            <h3>Healthy System</h3>
                            <p>Load averages < CPU core count</p>
                            <p>Resources available</p>
                            <p>No significant waiting</p>
                        </div>
                        <div class="right">
                            <h3>Overloaded System</h3>
                            <p>Load averages > CPU core count</p>
                            <p>CPU contention</p>
                            <p>Processes waiting</p>
                        </div>
                    </div>
                </section>

                <section>
                    <h2>Advanced Aggregations</h2>
                    <p>Combining metrics across dimensions</p>
                    <ul>
                        <li>Sum across multiple instances</li>
                        <li>Aggregate across different devices</li>
                        <li>Preserve important labels with <code>by</code></li>
                    </ul>
                </section>

                <section>
                    <h2>Aggregating Network Traffic</h2>
                    <pre><code class="language-promql">sum by (instance) (
  rate(node_network_receive_bytes_total{instance="localhost:9100",device!="lo"}[5m])
)</code></pre>
                    <p>Sums traffic across all interfaces per server</p>
                    <ul>
                        <li>Keeps the <code>instance</code> label</li>
                        <li>Total throughput rather than per-interface</li>
                    </ul>
                </section>

                <section>
                    <h2>Aggregating Transmit Traffic</h2>
                    <pre><code class="language-promql">sum by (instance) (
  rate(node_network_transmit_bytes_total{instance="localhost:9100",device!="lo"}[5m])
)</code></pre>
                    <p>Same pattern for outbound traffic</p>
                    <p>Useful for overall traffic monitoring</p>
                </section>

                <section>
                    <h2>Challenge: High Load Alerts</h2>
                    <p>How would you create an alert for high load average?</p>
                    <p>(e.g., load1 > core count)</p>
                </section>

                <section>
                    <h2>Solution: CPU Core Count</h2>
                    <p>First, determine the number of CPU cores:</p>
                    <pre><code class="language-promql">count without(cpu, mode) (
  node_cpu_seconds_total{instance="localhost:9100"}
)</code></pre>
                </section>

                <section>
                    <h2>Solution: Direct Comparison</h2>
                    <pre><code class="language-promql"># Compare 1-minute load average to core count
node_load1{instance="localhost:9100"} > count without(cpu, mode) (
  node_cpu_seconds_total{instance="localhost:9100"}
)</code></pre>
                    <p>Returns 1 (true) when load exceeds core count</p>
                </section>

                <section>
                    <h2>Solution: Ratio Approach</h2>
                    <pre><code class="language-promql"># Calculate ratio of load to core count
node_load1{instance="localhost:9100"} / count without(cpu, mode) (
  node_cpu_seconds_total{instance="localhost:9100"}
)</code></pre>
                    <p>Values > 1 indicate overload</p>
                    <p>Alert on ratio > 1 for 5 minutes</p>
                </section>

                <section>
                    <h2>Dashboard Best Practices</h2>
                    <ul>
                        <li>Combine related metrics in a single panel</li>
                        <li>Use different visualization types (graphs, gauges)</li>
                        <li>Add thresholds for quick visual assessment</li>
                        <li>Include both raw metrics and derived calculations</li>
                    </ul>
                </section>

                <section>
                    <h2>Key Takeaways</h2>
                    <ul>
                        <li>Network metrics require rate() to be useful</li>
                        <li>Load averages should be compared to core count</li>
                        <li>Aggregations simplify monitoring complex systems</li>
                        <li>Multi-metric dashboards provide comprehensive views</li>
                    </ul>
                </section>

                <section>
                    <h1>üåü Great job!</h1>
                    <p>You're ready for the Advanced Labs</p>
                    <p><small>Navigate: <a href="../index.html">All Slides</a> | <a href="../05_Advanced_CPU_Anomaly/index.html">Next Lab</a></small></p>
                </section>
            </div>
		</div>

		<script src="https://cdn.jsdelivr.net/npm/reveal.js@4.1.0/dist/reveal.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/reveal.js@4.1.0/plugin/notes/notes.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/reveal.js@4.1.0/plugin/markdown/markdown.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/reveal.js@4.1.0/plugin/highlight/highlight.js"></script>
		<script>
			// More info about initialization & config:
			// - https://revealjs.com/initialization/
			// - https://revealjs.com/config/
			Reveal.initialize({
				hash: true,
                slideNumber: true,
				// Learn about plugins: https://revealjs.com/plugins/
				plugins: [ RevealMarkdown, RevealHighlight, RevealNotes ]
			});
		</script>
	</body>
</html>
