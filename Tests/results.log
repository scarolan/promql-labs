Query Test Results - 2025-08-14 09:29:22.959605

Basic metric query - PASS
Query: node_memory_MemTotal_bytes

Filter by instance - PASS
Query: node_memory_MemTotal_bytes{instance="localhost:9100"}

Regex filter - PASS
Query: node_memory_MemTotal_bytes{instance=~"local.*"}

Basic arithmetic - PASS
Query: (node_memory_MemTotal_bytes{instance="localhost:9100"} - node_memory_MemAvailable_bytes{instance="localhost:9100"}) / node_memory_MemTotal_bytes{instance="localhost:9100"}

Percentage calculation - PASS
Query: 100 * ((node_memory_MemTotal_bytes{instance="localhost:9100"} - node_memory_MemAvailable_bytes{instance="localhost:9100"}) / node_memory_MemTotal_bytes{instance="localhost:9100"})

Time range query - PASS
Query: node_cpu_seconds_total{instance="localhost:9100"}[5m]

Sum function - PASS
Query: sum(node_cpu_seconds_total{instance="localhost:9100",mode="system"})

Average function - PASS
Query: avg(node_cpu_seconds_total{instance="localhost:9100",mode="system"})

Count cores (Option 1) - PASS
Query: count by(instance) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"})

Count cores (Option 2) - PASS
Query: count without(mode) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"})

Raw CPU metric - PASS
Query: node_cpu_seconds_total

Filtered by instance - PASS
Query: node_cpu_seconds_total{instance="localhost:9100"}

Filtered by instance and mode - PASS
Query: node_cpu_seconds_total{instance="localhost:9100", mode="user"}

Filtered by system mode - PASS
Query: node_cpu_seconds_total{instance="localhost:9100", mode="system"}

Filtered by idle mode - PASS
Query: node_cpu_seconds_total{instance="localhost:9100", mode="idle"}

CPU rate - PASS
Query: rate(node_cpu_seconds_total{instance="localhost:9100"}[5m])

Sum by mode - PASS
Query: sum by (mode) (rate(node_cpu_seconds_total{instance="localhost:9100"}[5m]))

Sum by mode excluding idle - PASS
Query: sum by (mode) (rate(node_cpu_seconds_total{instance="localhost:9100",mode!="idle"}[5m]))

Memory total - PASS
Query: node_memory_MemTotal_bytes{instance="localhost:9100"}

Memory available - PASS
Query: node_memory_MemAvailable_bytes{instance="localhost:9100"}

Memory usage % - PASS
Query: 100 * (1 - (node_memory_MemAvailable_bytes{instance="localhost:9100"} / node_memory_MemTotal_bytes{instance="localhost:9100"}))

Filesystem size - PASS
Query: node_filesystem_size_bytes{instance="localhost:9100",fstype!="tmpfs",mountpoint!="/run"}

Filesystem free - PASS
Query: node_filesystem_free_bytes{instance="localhost:9100",fstype!="tmpfs",mountpoint!="/run"}

Disk usage % for root - PASS
Query: 100 * (1 - (node_filesystem_free_bytes{instance="localhost:9100",mountpoint="/"} / node_filesystem_size_bytes{instance="localhost:9100",mountpoint="/"}))

Network receive rate - PASS
Query: rate(node_network_receive_bytes_total{instance="localhost:9100",device!="lo"}[5m])

Network transmit rate - PASS
Query: rate(node_network_transmit_bytes_total{instance="localhost:9100",device!="lo"}[5m])

Load 1m - PASS
Query: node_load1{instance="localhost:9100"}

Load 5m - PASS
Query: node_load5{instance="localhost:9100"}

Load 15m - PASS
Query: node_load15{instance="localhost:9100"}

Aggregated network receive - PASS
Query: sum by (instance) (rate(node_network_receive_bytes_total{instance="localhost:9100",device!="lo"}[5m]))

Aggregated network transmit - PASS
Query: sum by (instance) (rate(node_network_transmit_bytes_total{instance="localhost:9100",device!="lo"}[5m]))

Load compared to CPU cores - PASS (ALERT NO DATA)
Query: node_load1{instance="localhost:9100"} > on(instance) count by(instance) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"})

Load divided by CPU cores - PASS
Query: node_load1{instance="localhost:9100"} / on(instance) count by(instance) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"})

CPU saturation detection - PASS
Query: max_over_time((100 * (1 - (sum by (instance) (rate(node_cpu_seconds_total{instance="localhost:9100",mode="idle"}[5m])) / count by (instance) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"}))))[30m:1m])

CPU spikes using increase - PASS
Query: increase(node_cpu_seconds_total{instance="localhost:9100",mode="user"}[10m])

Max increase over time - PASS
Query: max_over_time(increase(node_cpu_seconds_total{instance="localhost:9100",mode="user"}[1m])[30m:1m])

User mode avg percentage over time - PASS
Query: max_over_time((avg by (instance) (rate(node_cpu_seconds_total{instance="localhost:9100",mode="user"}[1m])) * 100)[30m:1m])

CPU usage % - PASS
Query: 100 * (1 - (avg by (instance) (rate(node_cpu_seconds_total{instance="localhost:9100",mode="idle"}[5m])) / count by (instance) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"})))

Memory usage % - PASS
Query: 100 * (1 - (node_memory_MemAvailable_bytes{instance="localhost:9100"} / node_memory_MemTotal_bytes{instance="localhost:9100"}))

Network receive rate aggregate - PASS
Query: sum by (instance) (rate(node_network_receive_bytes_total{instance="localhost:9100",device!="lo"}[5m]))

High CPU and Memory alert - PASS
Query: (100 * (1 - (avg by (instance) (rate(node_cpu_seconds_total{instance="localhost:9100",mode="idle"}[5m])) / count by (instance) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"}))) > bool 80) and on(instance) (100 * (1 - (node_memory_MemAvailable_bytes{instance="localhost:9100"} / node_memory_MemTotal_bytes{instance="localhost:9100"})) > bool 80)

High CPU alert boolean - PASS
Query: (100 * (1 - (avg by (instance) (rate(node_cpu_seconds_total{instance="localhost:9100",mode="idle"}[5m])) / count by (instance) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"}))) > bool 80)

High memory alert boolean - PASS
Query: (100 * (1 - (node_memory_MemAvailable_bytes{instance="localhost:9100"} / node_memory_MemTotal_bytes{instance="localhost:9100"})) > bool 80)

CPU usage for recording rule - PASS
Query: 100 * (1 - (avg by (instance) (rate(node_cpu_seconds_total{instance="localhost:9100",mode="idle"}[5m]))))

Alert expression simulation - PASS (ALERT NO DATA)
Query: 100 * (1 - (avg by (instance) (rate(node_cpu_seconds_total{instance="localhost:9100",mode="idle"}[5m])) / count by (instance) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"}))) > 80

CPU recording rule query - NO DATA
Query: instance:node_cpu_usage:percent{instance="localhost:9100"}

Label replace function - PASS
Query: label_replace(node_filesystem_size_bytes{instance="localhost:9100",mountpoint="/"}, "disk_type", "root_disk", "mountpoint", "/")

Label join function - PASS
Query: label_join(node_filesystem_size_bytes{instance="localhost:9100",mountpoint="/"}, "instance_path", "-", "instance", "mountpoint")

Historical comparison with offset - PASS
Query: sum(rate(node_cpu_seconds_total{instance="localhost:9100",mode!="idle"}[5m])) and sum(rate(node_cpu_seconds_total{instance="localhost:9100",mode!="idle"}[5m] offset 5m))

Historical difference calculation - PASS
Query: sum(rate(node_cpu_seconds_total{instance="localhost:9100",mode!="idle"}[5m])) - sum(rate(node_cpu_seconds_total{instance="localhost:9100",mode!="idle"}[5m] offset 5m))

Top K resources - PASS
Query: topk(3, sum by (mode) (rate(node_cpu_seconds_total{instance="localhost:9100"}[5m])))

Subquery for trend analysis - PASS
Query: max_over_time(rate(node_cpu_seconds_total{instance="localhost:9100",mode="user"}[5m])[30m:5m])

Detecting missing data - NO DATA
Query: absent(node_cpu_seconds_total{instance="localhost:9100"})

Memory usage change with offset - PASS
Query: (100 * (1 - (node_memory_MemAvailable_bytes{instance="localhost:9100"} / node_memory_MemTotal_bytes{instance="localhost:9100"})) - 100 * (1 - (node_memory_MemAvailable_bytes{instance="localhost:9100"} offset 5m / node_memory_MemTotal_bytes{instance="localhost:9100"} offset 5m))) / (100 * (1 - (node_memory_MemAvailable_bytes{instance="localhost:9100"} offset 5m / node_memory_MemTotal_bytes{instance="localhost:9100"} offset 5m))) * 100

Memory usage with offset 5m - PASS
Query: 100 * (1 - (node_memory_MemAvailable_bytes{instance="localhost:9100"} offset 5m / node_memory_MemTotal_bytes{instance="localhost:9100"} offset 5m))

Memory usage change with offset 1m - PASS
Query: ((100 * (1 - (node_memory_MemAvailable_bytes{instance="localhost:9100"} / node_memory_MemTotal_bytes{instance="localhost:9100"}))) - (100 * (1 - (node_memory_MemAvailable_bytes{instance="localhost:9100"} offset 1m / node_memory_MemTotal_bytes{instance="localhost:9100"} offset 1m)))) / (100 * (1 - (node_memory_MemAvailable_bytes{instance="localhost:9100"} offset 1m / node_memory_MemTotal_bytes{instance="localhost:9100"} offset 1m))) * 100

Memory usage percent change - NO DATA
Query: (memory_usage_percent - memory_usage_percent offset 5m) / memory_usage_percent offset 5m * 100

Histogram bucket exploration - PASS
Query: prometheus_http_request_duration_seconds_bucket

Histogram specific handler - PASS
Query: prometheus_http_request_duration_seconds_bucket{handler="/api/v1/query"}

95th percentile latency - PASS
Query: histogram_quantile(0.95, sum(rate(prometheus_http_request_duration_seconds_bucket[5m])) by (le))

90th percentile latency - PASS
Query: histogram_quantile(0.9, sum(rate(prometheus_http_request_duration_seconds_bucket[5m])) by (le))

Median latency by handler - PASS
Query: histogram_quantile(0.5, sum by (handler, le) (rate(prometheus_http_request_duration_seconds_bucket[5m])))

SLO calculation - success rate - NO DATA
Query: (sum(rate(prometheus_http_request_duration_seconds_bucket{le="0.5"}[5m])) / sum(rate(prometheus_http_request_duration_seconds_count[5m]))) * 100

SLO calculation - error rate - NO DATA
Query: (1 - sum(rate(prometheus_http_request_duration_seconds_bucket{le="0.5"}[5m])) / sum(rate(prometheus_http_request_duration_seconds_count[5m]))) * 100

Gauge derivative - PASS
Query: deriv(node_memory_Active_bytes{instance="localhost:9100"}[5m])

Linear prediction - PASS
Query: predict_linear(node_memory_Active_bytes{instance="localhost:9100"}[5m], 300)

90th percentile latency by handler - PASS
Query: histogram_quantile(0.90, sum by(handler, le) (rate(prometheus_http_request_duration_seconds_bucket[5m])))

Percentage of fast requests by handler - PASS
Query: (sum by (handler) (rate(prometheus_http_request_duration_seconds_bucket{le="0.1"}[5m])) / sum by (handler) (rate(prometheus_http_request_duration_seconds_count[5m]))) * 100

Median and 95th percentile comparison - PASS
Query: label_replace(histogram_quantile(0.5, sum by(le) (rate(prometheus_http_request_duration_seconds_bucket[5m]))), "quantile", "0.5", "", "") or label_replace(histogram_quantile(0.95, sum by(le) (rate(prometheus_http_request_duration_seconds_bucket[5m]))), "quantile", "0.95", "", "")

Load per CPU core (one-to-one join) - PASS
Query: node_load1{instance="localhost:9100"} / on(instance) count by(instance) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"})

Memory total to available ratio (ignoring join) - PASS
Query: node_memory_MemTotal_bytes{instance="localhost:9100"} / ignoring(job) node_memory_MemAvailable_bytes{instance="localhost:9100"}

Filesystem usage percentage (group_left) - PASS
Query: (node_filesystem_size_bytes{instance="localhost:9100",fstype="ext4",mountpoint="/"} - node_filesystem_free_bytes{instance="localhost:9100",fstype="ext4",mountpoint="/"}) / on(instance) group_left(mountpoint) node_filesystem_size_bytes{instance="localhost:9100",fstype="ext4",mountpoint="/"} * 100

CPU usage per core (group_left) - NO DATA
Query: rate(node_cpu_seconds_total{instance="localhost:9100",mode!="idle"}[5m]) / on(instance) group_left(cpu) (rate(node_cpu_seconds_total{instance="localhost:9100",mode!="idle"}[5m]) + rate(node_cpu_seconds_total{instance="localhost:9100",mode="idle"}[5m]))

Memory total with filesystem context (group_right) - PASS
Query: node_memory_MemTotal_bytes{instance="localhost:9100"} / on(instance) group_right(mountpoint,fstype) node_filesystem_size_bytes{instance="localhost:9100"}

CPU and memory efficiency ratio - PASS
Query: (node_load1{instance="localhost:9100"} / on(instance) count by(instance) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"})) / on(instance) (node_memory_MemAvailable_bytes{instance="localhost:9100"} / node_memory_MemTotal_bytes{instance="localhost:9100"})

Network throughput per CPU core - PASS
Query: sum by(instance) (rate(node_network_transmit_bytes_total{instance="localhost:9100",device!="lo"}[5m])) / on(instance) count by(instance) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"})

Filesystem space as percentage of memory - PASS
Query: (node_filesystem_free_bytes{instance="localhost:9100",mountpoint="/"} / on(instance) node_memory_MemTotal_bytes{instance="localhost:9100"}) * 100

Boolean join - high load AND high memory - PASS (ALERT NO DATA)
Query: (node_load1{instance="localhost:9100"} > on(instance) count by(instance) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"})) and on(instance) ((node_memory_MemTotal_bytes{instance="localhost:9100"} - node_memory_MemAvailable_bytes{instance="localhost:9100"}) / node_memory_MemTotal_bytes{instance="localhost:9100"} > 0.8)

Efficient aggregation before join - PASS
Query: avg by(instance) (rate(node_cpu_seconds_total{instance="localhost:9100",mode!="idle"}[5m])) / on(instance) (node_memory_MemAvailable_bytes{instance="localhost:9100"} / node_memory_MemTotal_bytes{instance="localhost:9100"})

Multi-metric efficiency score - NO DATA
Query: ((100 * (1 - avg by(instance) (rate(node_cpu_seconds_total{instance="localhost:9100",mode="idle"}[5m])))) + (100 * (1 - (node_memory_MemAvailable_bytes{instance="localhost:9100"} / node_memory_MemTotal_bytes{instance="localhost:9100"}))) + (sum by(instance) (rate(node_network_transmit_bytes_total{instance="localhost:9100",device!="lo"}[5m])) / 1024 / 1024)) / on(instance) (count by(instance) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"}) + (node_memory_MemTotal_bytes{instance="localhost:9100"} / 1024 / 1024 / 1024))

Simple efficiency ratio - PASS
Query: node_load1{instance="localhost:9100"} / on(instance) (node_memory_MemAvailable_bytes{instance="localhost:9100"} / 1024 / 1024 / 1024)

===== Test Summary =====
Total queries: 81
Passed: 81
Failed: 0
Success rate: 100.0%
