Query Test Results - 07/02/2025 15:12:51
Found 53 queries to test.
Basic metric query - PASS
Query: node_memory_MemTotal_bytes

Filter by instance - PASS
Query: node_memory_MemTotal_bytes{instance="localhost:9100"}

Regex filter - PASS
Query: node_memory_MemTotal_bytes{instance=~"local.*"}

Basic arithmetic - PASS
Query: (node_memory_MemTotal_bytes{instance="localhost:9100"} - node_memory_MemAvailable_bytes{instance="localhost:9100"}) / node_memory_MemTotal_bytes{instance="localhost:9100"}

Percentage calculation - PASS
Query: 100 * ((node_memory_MemTotal_bytes{instance="localhost:9100"} - node_memory_MemAvailable_bytes{instance="localhost:9100"}) / node_memory_MemTotal_bytes{instance="localhost:9100"})

Time range query - PASS
Query: node_cpu_seconds_total{instance="localhost:9100"}[5m]

Sum function - PASS
Query: sum(node_cpu_seconds_total{instance="localhost:9100",mode="system"})

Average function - PASS
Query: avg(node_cpu_seconds_total{instance="localhost:9100",mode="system"})

Count cores - PASS
Query: count without(cpu, mode) (node_cpu_seconds_total{instance="localhost:9100"})

Raw CPU metric - PASS
Query: node_cpu_seconds_total

Filtered by instance - PASS
Query: node_cpu_seconds_total{instance="localhost:9100"}

Filtered by instance and mode - PASS
Query: node_cpu_seconds_total{instance="localhost:9100", mode="user"}

CPU rate - PASS
Query: rate(node_cpu_seconds_total{instance="localhost:9100"}[5m])

Sum by mode - PASS
Query: sum by (mode) (rate(node_cpu_seconds_total{instance="localhost:9100"}[5m]))

Memory total - PASS
Query: node_memory_MemTotal_bytes{instance="localhost:9100"}

Memory available - PASS
Query: node_memory_MemAvailable_bytes{instance="localhost:9100"}

Memory usage % - PASS
Query: 100 * (1 - (node_memory_MemAvailable_bytes{instance="localhost:9100"} / node_memory_MemTotal_bytes{instance="localhost:9100"}))

Filesystem size - PASS
Query: node_filesystem_size_bytes{instance="localhost:9100",fstype!="tmpfs",mountpoint!="/run"}

Filesystem free - PASS
Query: node_filesystem_free_bytes{instance="localhost:9100",fstype!="tmpfs",mountpoint!="/run"}

Disk usage % for root - PASS
Query: 100 * (1 - (node_filesystem_free_bytes{instance="localhost:9100",mountpoint="/"} / node_filesystem_size_bytes{instance="localhost:9100",mountpoint="/"}))

Network receive rate - PASS
Query: rate(node_network_receive_bytes_total{instance="localhost:9100",device!="lo"}[5m])

Network transmit rate - PASS
Query: rate(node_network_transmit_bytes_total{instance="localhost:9100",device!="lo"}[5m])

Load 1m - PASS
Query: node_load1{instance="localhost:9100"}

Load 5m - PASS
Query: node_load5{instance="localhost:9100"}

Load 15m - PASS
Query: node_load15{instance="localhost:9100"}

Aggregated network receive - PASS
Query: sum by (instance) (rate(node_network_receive_bytes_total{instance="localhost:9100",device!="lo"}[5m]))

Aggregated network transmit - PASS
Query: sum by (instance) (rate(node_network_transmit_bytes_total{instance="localhost:9100",device!="lo"}[5m]))

CPU saturation detection - PASS
Query: max_over_time((100 * (1 - (sum by (instance) (rate(node_cpu_seconds_total{instance="localhost:9100",mode="idle"}[5m])) / count by (instance) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"}))))[30m:1m])

CPU spikes using increase - PASS
Query: increase(node_cpu_seconds_total{instance="localhost:9100",mode="user"}[10m])

CPU usage % - PASS
Query: 100 * (1 - (avg by (instance) (rate(node_cpu_seconds_total{instance="localhost:9100",mode="idle"}[5m])) / count by (instance) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"})))

Memory usage % - PASS
Query: 100 * (1 - (node_memory_MemAvailable_bytes{instance="localhost:9100"} / node_memory_MemTotal_bytes{instance="localhost:9100"}))

Network receive rate aggregate - PASS
Query: sum by (instance) (rate(node_network_receive_bytes_total{instance="localhost:9100",device!="lo"}[5m]))

High CPU and Memory alert - PASS (ALERT NO DATA)
Query: (100 * (1 - (avg by (instance) (rate(node_cpu_seconds_total{instance="localhost:9100",mode="idle"}[5m])) / count by (instance) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"}))) > 80) and (100 * (1 - (node_memory_MemAvailable_bytes{instance="localhost:9100"} / node_memory_MemTotal_bytes{instance="localhost:9100"})) > 80)

CPU usage for recording rule - PASS
Query: 100 * (1 - (avg by (instance) (rate(node_cpu_seconds_total{instance="localhost:9100",mode="idle"}[5m]))))

Alert expression simulation - PASS (ALERT NO DATA)
Query: 100 * (1 - (avg by (instance) (rate(node_cpu_seconds_total{instance="localhost:9100",mode="idle"}[5m])) / count by (instance) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"}))) > 80

Label replace function - PASS
Query: label_replace(node_filesystem_size_bytes{instance="localhost:9100",mountpoint="/"}, "disk_type", "root_disk", "mountpoint", "/")

Label join function - PASS
Query: label_join(node_filesystem_size_bytes{instance="localhost:9100",mountpoint="/"}, "instance_path", "-", "instance", "mountpoint")

Historical comparison with offset - PASS
Query: sum(rate(node_cpu_seconds_total{instance="localhost:9100",mode!="idle"}[5m])) and sum(rate(node_cpu_seconds_total{instance="localhost:9100",mode!="idle"}[5m] offset 1h))

Historical difference calculation - PASS
Query: sum(rate(node_cpu_seconds_total{instance="localhost:9100",mode!="idle"}[5m])) - sum(rate(node_cpu_seconds_total{instance="localhost:9100",mode!="idle"}[5m] offset 1h))

Top K resources - PASS
Query: topk(3, sum by (mode) (rate(node_cpu_seconds_total{instance="localhost:9100"}[5m])))

Subquery for trend analysis - PASS
Query: max_over_time(rate(node_cpu_seconds_total{instance="localhost:9100",mode="user"}[5m])[30m:5m])

Detecting missing data - NO DATA
Query: absent(node_cpu_seconds_total{instance="localhost:9100"})

Memory usage change with offset - PASS
Query: (100 * (1 - (node_memory_MemAvailable_bytes{instance="localhost:9100"} / node_memory_MemTotal_bytes{instance="localhost:9100"})) - 100 * (1 - (node_memory_MemAvailable_bytes{instance="localhost:9100"} offset 1h / node_memory_MemTotal_bytes{instance="localhost:9100"} offset 1h))) / (100 * (1 - (node_memory_MemAvailable_bytes{instance="localhost:9100"} offset 1h / node_memory_MemTotal_bytes{instance="localhost:9100"} offset 1h))) * 100

Histogram bucket exploration - PASS
Query: prometheus_http_request_duration_seconds_bucket

Histogram specific handler - PASS
Query: prometheus_http_request_duration_seconds_bucket{handler="/api/v1/query"}

95th percentile latency - PASS
Query: histogram_quantile(0.95, sum(rate(prometheus_http_request_duration_seconds_bucket[5m])) by (le))

90th percentile latency - PASS
Query: histogram_quantile(0.9, sum(rate(prometheus_http_request_duration_seconds_bucket[5m])) by (le))

Median latency by handler - PASS
Query: histogram_quantile(0.5, sum by (handler, le) (rate(prometheus_http_request_duration_seconds_bucket[5m])))

SLO calculation - success rate - NO DATA
Query: (sum(rate(prometheus_http_request_duration_seconds_bucket{le="0.5"}[5m])) / sum(rate(prometheus_http_request_duration_seconds_count[5m]))) * 100

SLO calculation - error rate - NO DATA
Query: (1 - sum(rate(prometheus_http_request_duration_seconds_bucket{le="0.5"}[5m])) / sum(rate(prometheus_http_request_duration_seconds_count[5m]))) * 100

Gauge derivative - PASS
Query: deriv(node_memory_Active_bytes{instance="localhost:9100"}[1h])

Linear prediction - PASS
Query: predict_linear(node_memory_Active_bytes{instance="localhost:9100"}[1h], 3600)

CPU usage synthetic histogram - PASS
Query: sum(count_values("le", floor(clamp_max(100 * (1 - (avg by (instance) (rate(node_cpu_seconds_total{instance="localhost:9100",mode="idle"}[5m])) / count by (instance) (node_cpu_seconds_total{instance="localhost:9100",mode="idle"}))), 100) / 5) * 5)) by (le)

===== Test Summary =====
Total queries: 53
Passed: 53
Failed: 0
Success rate: 100%
